@model ML.Producto

<div class="container">
    <div class="text-center">
        <h1>Formulario de Productos</h1>
        <h5>Ingrese la información del producto a registrar</h5>
    </div>
    <hr />


    @using (Html.BeginForm("Form", "Producto", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        <div class="row">
            @Html.TextBoxFor(model => model.IdProducto, new { @class = "form-control", @style = "display: none" })
            <div class="col-md-3">
                @Html.LabelFor(model => model.Nombre)
                <div class="input-group mb-3">
                    <span class="input-group-text" id="addonNombre"><i class="bi bi-basket-fill" style="color: #0056d6;"></i></span>
                    @Html.TextBoxFor(model => model.Nombre, new { @class = "form-control", @Id = "txtNombre", @placeholder = "Ejemplo: Papitas", @OnKeyPress = "SoloLetras(event, 'lblNombre', 'txtNombre', 'addonNombre')" })
                </div>
                @Html.ValidationMessageFor(model => model.Nombre)
                @Html.Label("", null, new { @id = "lblNombre" })
            </div>
            <div class="col-md-3">
                @Html.LabelFor(model => model.Precio)
                <div class="input-group mb-3">
                    <span class="input-group-text" id="basic-addon1"><i class="fa-solid fa-money-bill-wave" style="color: #0056d6;"></i></span>
                    @Html.TextBoxFor(model => model.Precio, new { @class = "form-control", @placeholder = "$MXN" })
                </div>
                @Html.ValidationMessageFor(model => model.Precio)
            </div>
            <div class="col-md-3">
                @Html.Label("Areas")
                <div class="input-group mb-3">
                    <span class="input-group-text" id="basic-addon1"><i class="fa-solid fa-store" style="color: #0056d6;"></i></span>
                    @Html.DropDownListFor(model => model.Departamento.Area.IdArea, new SelectList(Model.Departamento.Area.Areas, "IdArea", "Nombre"), "Selecciona una opción", new { @class = "form-control", @id = "ddlArea" })
                </div>
            </div>
            <div class="col-md-3">
                @Html.Label("Departamentos")
                <div class="input-group mb-3">
                    <span class="input-group-text" id="basic-addon1"><i class="fa-solid fa-store" style="color: #0056d6;"></i></span>
                    @if (Model.Departamento.Departamentos == null)
                    {
                        @Html.DropDownListFor(model => model.Departamento.IdDepartamento, new SelectList(string.Empty, "Value", "Text"), "Selecciona una opción", new { @class = "form-control", @id = "ddlDepartamento" })
                    }
                    else
                    {
                        @Html.DropDownListFor(model => model.Departamento.IdDepartamento, new SelectList(Model.Departamento.Departamentos, "IdDepartamento", "Nombre"), "Selecciona una opción", new { @class = "form-control", @id = "ddlDepartamento" })

                    }

                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12 text-center">
                @if (@Model.IdProducto == 0)
                {
                    <button type="submit" class="btn btn-success" ><i class="bi bi-save-fill"></i> Agregar</button>
                }
                else
                {
                    <button type="submit" class="btn btn-info">Actualizar</button>
                }

                @Html.ActionLink("Regresar", "GetAll", "Producto", htmlAttributes: new { @class = "btn btn-danger" })
            </div>
        </div>
        <div class="row">
            <div class="col-md-3">
                @Html.LabelFor(model => model.Imagen)
                <div class="input-group mb-3">
                    <span class="input-group-text" id="basic-addon1"><i class="bi bi-card-image"></i></span>
                    <input id="fuImage" type='file' class="form-control" name="fuImage" onchange="validateFile(this), readURL(this);" />
                </div>
                <img id="Img" src="https://www.computerhope.com/jargon/g/guest-user.png" style="width:250px ; height:250px" />
            </div>

        </div>


    }
</div>
@section Scripts  
{
    <script type="text/javascript">

      $(document).ready(function () {
                $("#ddlArea").change(function () {
                    $("#ddlDepartamento").empty();
                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("GetDepartamentosByIdArea")',
                        dataType: 'json',
                        data: { idArea: $("#ddlArea").val() },
                        success: function (departamentos) {
                            $("#ddlDepartamento").append('<option value="0">' + 'Seleccione una opción' + '</option>');
                            $.each(departamentos, function (i, departamentos) {
                                $("#ddlDepartamento").append('<option value="'
                                    + departamentos.idDepartamento + '">'
                                    + departamentos.nombre + '</option>');
                            });
                        },
                        error: function (ex) {
                            alert('Failed.' + ex);
                        }
                    });
                });

      });

        function SoloLetras(caracter, idLabel, idTextBox, addon) {

            if (!/^[a-zA-Z]/g.test(caracter.key)) {
                caracter.preventDefault();
                $('#' + idLabel).text("Solo se permiten letras");
                $('#' + idLabel).css({ "color": "red" });
                $('#' + idTextBox).css({ "border-color": "red" });
                $('#' + addon).css({ "border-color": "red", "background-color": "#f8d7da" });
                return false;
            }
            else {
                $('#' + idLabel).text("");
                $('#' + idLabel).css({ "color": "green" });
                $('#' + idTextBox).css({ "border-color": "green" });
                $('#' + addon).css({ "border-color": "green", "background-color": "#5CB443" });

            }
        }

        function validateFile() {
            var allowedExtension = ['jpeg', 'jpg', 'png'];
            var fileExtension = document.getElementById('fuImage').value.split('.').pop().toLowerCase();
            var isValidFile = false;

            for (var index in allowedExtension) {

                if (fileExtension === allowedExtension[index]) {
                    isValidFile = true;
                    break;
                }
            }

            if (!isValidFile) {
                alert('Las extensiones permitidas son : *.' + allowedExtension.join(', *.'));
                document.getElementById('fuImage').value = ""
            }

            return isValidFile;
        }
        function readURL(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();

                reader.onload = function (e) {
                    $('#Img').attr('src', e.target.result);

                };

                reader.readAsDataURL(input.files[0]);
            }
        }
    </script>

}
